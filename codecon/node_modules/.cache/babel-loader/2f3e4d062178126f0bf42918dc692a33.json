{"ast":null,"code":"var _jsxFileName = \"/Users/slaterweinstock/Documents/fall2019/codecon-422/codecon/src/login.jsx\";\nimport React, { Component } from \"react\";\nimport { Container, Col, Form, FormGroup, FormText, FormFeedback, Label, Input, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { async } from \"q\";\nimport \"./login.css\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = async event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      await this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      validate_email: {\n        emailState: \"\"\n      },\n      validate_password: {\n        passwordState: \"\"\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  } //These are just ways of adding some dynamic properties to the fields by auto changing warning from red to green\n\n\n  validateEmail(e) {\n    const email_re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    /*https://github.com/alligatorio/Fancy-Form-Example/blob/master/src/App.js*/\n\n    const validate_email = this.state.validate_email;\n\n    if (email_re.test(e.target.value)) {\n      /*if match*/\n      validate_email.emailState = \"has-success\";\n    } else {\n      validate_email.emailState = \"has-danger\";\n    }\n\n    this.setState({\n      validate_email\n    });\n  }\n\n  validatePassword(e) {\n    const password_re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n    /*requires 8 characters: 1 UC, 1 LC, 1 #, 1 Special https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/*/\n\n    const validate_password = this.state.validate_password;\n\n    if (password_re.test(e.target.value)) {\n      /*if match*/\n      validate_password.passwordState = \"has-success\";\n    } else {\n      validate_password.passwordState = \"has-danger\";\n    }\n\n    this.setState({\n      validate_password\n    });\n  }\n  /*https://medium.com/@ian.mundy/async-event-handlers-in-react-a1590ed24399*/\n\n  /*https://reactjs.org/docs/forms.html refer to Handling Multiple Inputs*/\n\n\n  submitForm(e\n  /*if event isnt handled explicitly, do not do the default*/\n  ) {\n    e.preventDefault();\n    console.log(\"Email: \".concat(this.state.email));\n    console.log(\"Password: \".concat(this.state.password));\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    const isEnabled = this.state.validate_email.emailState === \"has-success\" && this.state.validate_password.passwordState === \"has-success\";\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Login\", React.createElement(Form, {\n      className: \"formLogin\",\n      onSubmit: e => this.submitForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" \", React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" \", React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"loginEmail\",\n      placeholder: \"user@mail.com\",\n      value: email,\n      valid: this.state.validate_email.emailState === \"has-success\",\n      invalid: this.state.validate_email.emailState === \"has-danger\",\n      onChange: e => {\n        this.validateEmail(e);\n        this.handleInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \" \", React.createElement(FormFeedback, {\n      invalid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"This must be a valid email address.\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"login_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"loginPassword\",\n      placeholder: \"Password\",\n      value: password,\n      valid: this.state.validate_password.passwordState === \"has-success\",\n      invalid: this.state.validate_password.passwordState === \"has-danger\",\n      onChange: e => {\n        this.validatePassword(e);\n        this.handleInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), \" \", React.createElement(FormFeedback, {\n      invalid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Password requires at least: 1 lowercase, 1 uppercase, 1 number, and 1 special character.\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: !isEnabled,\n      tag: Link,\n      to: \"/websiteheader\",\n      id: \"signin\",\n      color: \"success\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Button, {\n      id: \"register\",\n      color: \"link\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Register with Git\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/slaterweinstock/Documents/fall2019/codecon-422/codecon/src/login.jsx"],"names":["React","Component","Container","Col","Form","FormGroup","FormText","FormFeedback","Label","Input","Button","Link","async","Login","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","state","email","password","validate_email","emailState","validate_password","passwordState","bind","validateEmail","e","email_re","test","validatePassword","password_re","RegExp","submitForm","preventDefault","console","log","render","isEnabled"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Container,\n  Col,\n  Form,\n  FormGroup,\n  FormText,\n  FormFeedback,\n  Label,\n  Input,\n  Button\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { async } from \"q\";\nimport \"./login.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      validate_email: {\n        emailState: \"\"\n      },\n      validate_password: {\n        passwordState: \"\"\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  //These are just ways of adding some dynamic properties to the fields by auto changing warning from red to green\n  validateEmail(e) {\n    const email_re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; /*https://github.com/alligatorio/Fancy-Form-Example/blob/master/src/App.js*/\n    const { validate_email } = this.state;\n    if (email_re.test(e.target.value)) {\n      /*if match*/\n      validate_email.emailState = \"has-success\";\n    } else {\n      validate_email.emailState = \"has-danger\";\n    }\n    this.setState({ validate_email });\n  }\n  validatePassword(e) {\n    const password_re = new RegExp(\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n    ); /*requires 8 characters: 1 UC, 1 LC, 1 #, 1 Special https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/*/\n    const { validate_password } = this.state;\n    if (password_re.test(e.target.value)) {\n      /*if match*/\n      validate_password.passwordState = \"has-success\";\n    } else {\n      validate_password.passwordState = \"has-danger\";\n    }\n    this.setState({ validate_password });\n  }\n\n  /*https://medium.com/@ian.mundy/async-event-handlers-in-react-a1590ed24399*/\n  /*https://reactjs.org/docs/forms.html refer to Handling Multiple Inputs*/\n  handleInputChange = async event => {\n    const { target } = event;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const { name } = target;\n    await this.setState({\n      [name]: value\n    });\n  };\n\n  submitForm(e /*if event isnt handled explicitly, do not do the default*/) {\n    e.preventDefault();\n    console.log(`Email: ${this.state.email}`);\n    console.log(`Password: ${this.state.password}`);\n  }\n\n  render() {\n    const { email, password } = this.state;\n    const isEnabled =\n      this.state.validate_email.emailState === \"has-success\" &&\n      this.state.validate_password.passwordState === \"has-success\";\n    return (\n      <div className=\"Login\">\n        Login\n        <Form className=\"formLogin\" onSubmit={e => this.submitForm(e)}>\n          {\" \"}\n          {/*User's login information contained within this form*/}\n          <Col>\n            <FormGroup>\n              {\" \"}\n              {/*Wraps form control with proper spacing and label/helptext/validation STATE https://react-bootstrap.github.io/components/forms/ */}\n              <Label>Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"loginEmail\"\n                placeholder=\"user@mail.com\"\n                value={email}\n                valid={this.state.validate_email.emailState === \"has-success\"}\n                invalid={this.state.validate_email.emailState === \"has-danger\"}\n                onChange={e => {\n                  this.validateEmail(e);\n                  this.handleInputChange(e);\n                }}\n              />{\" \"}\n              {/*name field used in JS*/}\n              <FormFeedback invalid>\n                This must be a valid email address.\n              </FormFeedback>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"login_password\">Password</Label>\n              {/*masking*/}\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"loginPassword\"\n                placeholder=\"Password\"\n                value={password}\n                valid={\n                  this.state.validate_password.passwordState === \"has-success\"\n                }\n                invalid={\n                  this.state.validate_password.passwordState === \"has-danger\"\n                }\n                onChange={e => {\n                  this.validatePassword(e);\n                  this.handleInputChange(e);\n                }}\n              />{\" \"}\n              {/*name field used in JS*/}\n              <FormFeedback invalid>\n                Password requires at least: 1 lowercase, 1 uppercase, 1 number,\n                and 1 special character.\n              </FormFeedback>\n              {/*TODO: set up user validation*/}\n            </FormGroup>\n          </Col>\n          <Col>\n            <Button\n              disabled={!isEnabled}\n              tag={Link}\n              to=\"/websiteheader\"\n              id=\"signin\"\n              color=\"success\"\n              size=\"sm\"\n            >\n              Login\n            </Button>\n            {/* This can be whatever, I just thought maybe we could do a git signup */}\n            <Button id=\"register\" color=\"link\" size=\"sm\">\n              Register with Git\n            </Button>\n          </Col>\n        </Form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}