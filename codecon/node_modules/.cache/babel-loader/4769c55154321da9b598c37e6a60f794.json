{"ast":null,"code":"var _jsxFileName = \"/Users/slaterweinstock/Documents/fall2019/codecon-422/codecon/src/register.jsx\";\nimport React, { Component } from \"react\";\nimport { Container, Col, Form, FormGroup, FormText, FormFeedback, Label, Input, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { async } from \"q\";\nimport \"./register.css\";\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = async event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      /*this directly correlates to the name of each input*/\n\n      await this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      validate_email: {\n        emailState: \"\"\n      },\n      validate_password: {\n        passwordState: \"\"\n      },\n      validate_confirmpassword: {\n        passwordConfirmState: \"\"\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  validateEmail(e) {\n    const email_re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    /*https://github.com/alligatorio/Fancy-Form-Example/blob/master/src/App.js*/\n\n    const validate_email = this.state.validate_email;\n\n    if (email_re.test(e.target.value)) {\n      /*if match*/\n      validate_email.emailState = \"has-success\";\n    } else {\n      validate_email.emailState = \"has-danger\";\n    }\n\n    this.setState({\n      validate_email\n    });\n  }\n\n  validatePassword(e) {\n    const password_re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n    /*requires 8 characters: 1 UC, 1 LC, 1 #, 1 Special https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/*/\n\n    const validate_password = this.state.validate_password;\n\n    if (password_re.test(e.target.value)) {\n      /*if match*/\n      validate_password.passwordState = \"has-success\";\n      window.password_check = e.target.value;\n    } else {\n      validate_password.passwordState = \"has-danger\";\n    }\n\n    this.setState({\n      validate_password\n    });\n  }\n\n  validateConfirmedPassword(e) {\n    const validate_confirmpassword = this.state.validate_confirmpassword;\n\n    if (e.target.value.toString() === window.password_check) {\n      /*if match*/\n      validate_confirmpassword.passwordConfirmState = \"has-success\";\n    } else {\n      validate_confirmpassword.passwordConfirmState = \"has-danger\";\n    }\n\n    this.setState({\n      validate_confirmpassword\n    });\n  }\n  /*RE taken from: https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch04s02.html*/\n\n  /*https://medium.com/@ian.mundy/async-event-handlers-in-react-a1590ed24399*/\n\n  /*https://reactjs.org/docs/forms.html refer to Handling Multiple Inputs*/\n\n\n  submitForm(e)\n  /*if event isnt handled explicitly, do not do the default*/\n  {\n    e.preventDefault();\n    console.log(\"Email: \".concat(this.state.email));\n    console.log(\"Password: \".concat(this.state.password));\n    console.log(\"Confirmed Password: \".concat(this.state.confirm_password));\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirm_password = _this$state.confirm_password;\n    const isEnabled = this.state.validate_email.emailState === \"has-success\" && this.state.validate_password.passwordState === \"has-success\" && this.state.validate_confirmpassword.passwordConfirmState === \"has-success\";\n    return React.createElement(\"div\", {\n      className: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Form, {\n      className: \"Information\",\n      onSubmit: e => this.submitForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" \", React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" \", React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Email (this will be your username)\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"login_email\",\n      placeholder: \"Email\",\n      value: email,\n      valid: this.state.validate_email.emailState === \"has-success\",\n      invalid: this.state.validate_email.emailState === \"has-danger\",\n      onChange: e => {\n        this.validateEmail(e);\n        this.handleInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), \" \", React.createElement(FormFeedback, {\n      valid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Email looks good!\"), React.createElement(FormFeedback, {\n      invalid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Something is wrong with that email!\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\"\n      /*masking*/\n      ,\n      name: \"password\",\n      id: \"login_password\",\n      placeholder: \"Password\",\n      value: password,\n      valid: this.state.validate_password.passwordState === \"has-success\",\n      invalid: this.state.validate_password.passwordState === \"has-danger\",\n      onChange: e => {\n        this.validatePassword(e);\n        this.handleInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), \" \", React.createElement(FormFeedback, {\n      valid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Password looks good!\"), React.createElement(FormFeedback, {\n      invalid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Make sure the password has 1 of each: uppercase, lowercase, number, and special character\"), React.createElement(FormText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Password Reqs: 1 Uppercase Character, 1 Lowercase Character, 1 Number, 1 Special Character\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"confirm_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(Input, {\n      type: \"password\"\n      /*masking*/\n      ,\n      name: \"confirm_password\",\n      id: \"confirm_password\",\n      placeholder: \"Confirm Password\",\n      value: confirm_password,\n      valid: this.state.validate_confirmpassword.passwordConfirmState === \"has-success\",\n      invalid: this.state.validate_confirmpassword.passwordConfirmState === \"has-danger\",\n      onChange: e => {\n        this.validateConfirmedPassword(e);\n        this.handleInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), \" \", React.createElement(FormFeedback, {\n      valid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Password looks good!\"), React.createElement(FormFeedback, {\n      invalid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Make sure the password is the same that you entered above!\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: !isEnabled,\n      tag: Link,\n      to: \"/main\",\n      id: \"signup\",\n      color: \"success\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Sign Up\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/slaterweinstock/Documents/fall2019/codecon-422/codecon/src/register.jsx"],"names":["React","Component","Container","Col","Form","FormGroup","FormText","FormFeedback","Label","Input","Button","Link","async","Registration","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","state","email","password","confirm_password","validate_email","emailState","validate_password","passwordState","validate_confirmpassword","passwordConfirmState","bind","validateEmail","e","email_re","test","validatePassword","password_re","RegExp","window","password_check","validateConfirmedPassword","toString","submitForm","preventDefault","console","log","render","isEnabled"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Container,\n  Col,\n  Form,\n  FormGroup,\n  FormText,\n  FormFeedback,\n  Label,\n  Input,\n  Button\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { async } from \"q\";\nimport \"./register.css\";\n\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      validate_email: {\n        emailState: \"\"\n      },\n      validate_password: {\n        passwordState: \"\"\n      },\n      validate_confirmpassword: {\n        passwordConfirmState: \"\"\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  validateEmail(e) {\n    const email_re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; /*https://github.com/alligatorio/Fancy-Form-Example/blob/master/src/App.js*/\n    const { validate_email } = this.state;\n    if (email_re.test(e.target.value)) {\n      /*if match*/ validate_email.emailState = \"has-success\";\n    } else {\n      validate_email.emailState = \"has-danger\";\n    }\n    this.setState({ validate_email });\n  }\n  validatePassword(e) {\n    const password_re = new RegExp(\n      \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n    ); /*requires 8 characters: 1 UC, 1 LC, 1 #, 1 Special https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/*/\n    const { validate_password } = this.state;\n    if (password_re.test(e.target.value)) {\n      /*if match*/ validate_password.passwordState = \"has-success\";\n      window.password_check = e.target.value;\n    } else {\n      validate_password.passwordState = \"has-danger\";\n    }\n    this.setState({ validate_password });\n  }\n  validateConfirmedPassword(e) {\n    const { validate_confirmpassword } = this.state;\n    if (e.target.value.toString() === window.password_check) {\n      /*if match*/ validate_confirmpassword.passwordConfirmState =\n        \"has-success\";\n    } else {\n      validate_confirmpassword.passwordConfirmState = \"has-danger\";\n    }\n    this.setState({ validate_confirmpassword });\n  }\n  /*RE taken from: https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch04s02.html*/\n\n  /*https://medium.com/@ian.mundy/async-event-handlers-in-react-a1590ed24399*/\n  /*https://reactjs.org/docs/forms.html refer to Handling Multiple Inputs*/\n  handleInputChange = async event => {\n    const { target } = event;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const {\n      name\n    } = target; /*this directly correlates to the name of each input*/\n    await this.setState({\n      [name]: value\n    });\n  };\n\n  submitForm(e) /*if event isnt handled explicitly, do not do the default*/ {\n    e.preventDefault();\n    console.log(`Email: ${this.state.email}`);\n    console.log(`Password: ${this.state.password}`);\n    console.log(`Confirmed Password: ${this.state.confirm_password}`);\n  }\n\n  render() {\n    const { email, password, confirm_password } = this.state;\n    const isEnabled =\n      this.state.validate_email.emailState === \"has-success\" &&\n      this.state.validate_password.passwordState === \"has-success\" &&\n      this.state.validate_confirmpassword.passwordConfirmState ===\n        \"has-success\";\n    return (\n      <div className=\"Register\">\n        <h3>Register</h3>\n        <Form className=\"Information\" onSubmit={e => this.submitForm(e)}>\n          {\" \"}\n          {/*User's login information contained within this form*/}\n          <Col>\n            <FormGroup>\n              {\" \"}\n              {/*Wraps form control with proper spacing and label/helptext/validation STATE https://react-bootstrap.github.io/components/forms/ */}\n              <Label>Email (this will be your username)</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"login_email\"\n                placeholder=\"Email\"\n                value={email}\n                valid={this.state.validate_email.emailState === \"has-success\"}\n                invalid={this.state.validate_email.emailState === \"has-danger\"}\n                onChange={e => {\n                  this.validateEmail(e);\n                  this.handleInputChange(e);\n                }}\n              />{\" \"}\n              {/*name field used in JS*/}\n              <FormFeedback valid>Email looks good!</FormFeedback>\n              <FormFeedback invalid>\n                Something is wrong with that email!\n              </FormFeedback>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                /*masking*/ name=\"password\"\n                id=\"login_password\"\n                placeholder=\"Password\"\n                value={password}\n                valid={\n                  this.state.validate_password.passwordState === \"has-success\"\n                }\n                invalid={\n                  this.state.validate_password.passwordState === \"has-danger\"\n                }\n                onChange={e => {\n                  this.validatePassword(e);\n                  this.handleInputChange(e);\n                }}\n              />{\" \"}\n              {/*name field used in JS*/}\n              <FormFeedback valid>Password looks good!</FormFeedback>\n              <FormFeedback invalid>\n                Make sure the password has 1 of each: uppercase, lowercase,\n                number, and special character\n              </FormFeedback>\n              <FormText>\n                Password Reqs: 1 Uppercase Character, 1 Lowercase Character, 1\n                Number, 1 Special Character\n              </FormText>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"confirm_password\">Confirm Password</Label>\n              <Input\n                type=\"password\"\n                /*masking*/ name=\"confirm_password\"\n                id=\"confirm_password\"\n                placeholder=\"Confirm Password\"\n                value={confirm_password}\n                valid={\n                  this.state.validate_confirmpassword.passwordConfirmState ===\n                  \"has-success\"\n                }\n                invalid={\n                  this.state.validate_confirmpassword.passwordConfirmState ===\n                  \"has-danger\"\n                }\n                onChange={e => {\n                  this.validateConfirmedPassword(e);\n                  this.handleInputChange(e);\n                }}\n              />{\" \"}\n              {/*name field used in JS*/}\n              <FormFeedback valid>Password looks good!</FormFeedback>\n              <FormFeedback invalid>\n                Make sure the password is the same that you entered above!\n              </FormFeedback>\n            </FormGroup>\n          </Col>\n          <Col>\n            <Button\n              disabled={!isEnabled}\n              tag={Link}\n              to=\"/main\"\n              id=\"signup\"\n              color=\"success\"\n              size=\"sm\"\n            >\n              Sign Up\n            </Button>\n          </Col>\n        </Form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}