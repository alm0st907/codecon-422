{"ast":null,"code":"var _jsxFileName = \"/Users/slaterweinstock/Documents/fall2019/codecon-422/codecon/src/components/issues.jsx\";\nimport React, { Component } from \"react\";\nimport { Container, Col, Form, FormGroup, FormText, FormFeedback, Label, Input, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { async } from \"q\";\nexport default class IssueInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = async event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      /*this directly correlates to the name of each input*/\n\n      await this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      issueName: \"\",\n      issueDate: \"\",\n      issueDescription: \"\"\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  submitForm(e)\n  /*if event isnt handled explicitly, do not do the default*/\n  {\n    e.preventDefault();\n    console.log(\"issueName: \".concat(this.state.issueName));\n    console.log(\"issueDate: \".concat(this.state.issueDate));\n    console.log(\"issueDescription: \".concat(this.state.issueDescription));\n  }\n\n  render() {\n    const _this$state = this.state,\n          issueName = _this$state.issueName,\n          issueDate = _this$state.issueDate,\n          issueDescription = _this$state.issueDescription;\n    return React.createElement(\"div\", {\n      className: \"Issues\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Issue\"), React.createElement(Form, {\n      className: \"issueInfo\",\n      onSubmit: e => this.submitForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" \", React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" \", React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Issue Name\"), React.createElement(Input, {\n      type: \"string\",\n      name: \"issueName\",\n      id: \"issueName\",\n      placeholder: \"Issue Name\",\n      value: issueName,\n      onChange: e => {\n        this.handleInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \" \")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Issue Date\"), React.createElement(Input, {\n      type: \"date\"\n      /*masking*/\n      ,\n      name: \"issueDate\",\n      id: \"issueDate\",\n      placeholder: \"MM/DD/YYYY\",\n      value: issueDate,\n      valid: this.state.validate_password.passwordState === \"has-success\",\n      invalid: this.state.validate_password.passwordState === \"has-danger\",\n      onChange: e => {\n        this.validatePassword(e);\n        this.handleInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \" \", React.createElement(FormFeedback, {\n      valid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Password looks good!\"), React.createElement(FormFeedback, {\n      invalid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Make sure the password has 1 of each: uppercase, lowercase, number, and special character\"), React.createElement(FormText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Password Reqs: 1 Uppercase Character, 1 Lowercase Character, 1 Number, 1 Special Character\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"confirm_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(Input, {\n      type: \"password\"\n      /*masking*/\n      ,\n      name: \"confirm_password\",\n      id: \"confirm_password\",\n      placeholder: \"Confirm Password\",\n      value: confirm_password,\n      valid: this.state.validate_confirmpassword.passwordConfirmState === \"has-success\",\n      invalid: this.state.validate_confirmpassword.passwordConfirmState === \"has-danger\",\n      onChange: e => {\n        this.validateConfirmedPassword(e);\n        this.handleInputChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \" \", React.createElement(FormFeedback, {\n      valid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Password looks good!\"), React.createElement(FormFeedback, {\n      invalid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Make sure the password is the same that you entered above!\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: !isEnabled,\n      tag: Link,\n      to: \"/main\",\n      id: \"signup\",\n      color: \"success\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Sign Up\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/slaterweinstock/Documents/fall2019/codecon-422/codecon/src/components/issues.jsx"],"names":["React","Component","Container","Col","Form","FormGroup","FormText","FormFeedback","Label","Input","Button","Link","async","IssueInfo","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","state","issueName","issueDate","issueDescription","bind","submitForm","e","preventDefault","console","log","render","validate_password","passwordState","validatePassword","confirm_password","validate_confirmpassword","passwordConfirmState","validateConfirmedPassword","isEnabled"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Container,\n  Col,\n  Form,\n  FormGroup,\n  FormText,\n  FormFeedback,\n  Label,\n  Input,\n  Button\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { async } from \"q\";\n\nexport default class IssueInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issueName: \"\",\n      issueDate: \"\",\n      issueDescription: \"\"\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange = async event => {\n    const { target } = event;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const {\n      name\n    } = target; /*this directly correlates to the name of each input*/\n    await this.setState({\n      [name]: value\n    });\n  };\n\n  submitForm(e) /*if event isnt handled explicitly, do not do the default*/ {\n    e.preventDefault();\n    console.log(`issueName: ${this.state.issueName}`);\n    console.log(`issueDate: ${this.state.issueDate}`);\n    console.log(`issueDescription: ${this.state.issueDescription}`);\n  }\n\n  render() {\n    const { issueName, issueDate, issueDescription } = this.state;\n    return (\n      <div className=\"Issues\">\n        <h3>Issue</h3>\n        <Form className=\"issueInfo\" onSubmit={e => this.submitForm(e)}>\n          {\" \"}\n          {/*User's login information contained within this form*/}\n          <Col>\n            <FormGroup>\n              {\" \"}\n              {/*Wraps form control with proper spacing and label/helptext/validation STATE https://react-bootstrap.github.io/components/forms/ */}\n              <Label>Issue Name</Label>\n              <Input\n                type=\"string\"\n                name=\"issueName\"\n                id=\"issueName\"\n                placeholder=\"Issue Name\"\n                value={issueName}\n                onChange={e => {\n                  this.handleInputChange(e);\n                }}\n              />{\" \"}\n              {/*name field used in JS*/}\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label>Issue Date</Label>\n              <Input\n                type=\"date\"\n                /*masking*/ name=\"issueDate\"\n                id=\"issueDate\"\n                placeholder=\"MM/DD/YYYY\"\n                value={issueDate}\n                valid={\n                  this.state.validate_password.passwordState === \"has-success\"\n                }\n                invalid={\n                  this.state.validate_password.passwordState === \"has-danger\"\n                }\n                onChange={e => {\n                  this.validatePassword(e);\n                  this.handleInputChange(e);\n                }}\n              />{\" \"}\n              {/*name field used in JS*/}\n              <FormFeedback valid>Password looks good!</FormFeedback>\n              <FormFeedback invalid>\n                Make sure the password has 1 of each: uppercase, lowercase,\n                number, and special character\n              </FormFeedback>\n              <FormText>\n                Password Reqs: 1 Uppercase Character, 1 Lowercase Character, 1\n                Number, 1 Special Character\n              </FormText>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"confirm_password\">Confirm Password</Label>\n              <Input\n                type=\"password\"\n                /*masking*/ name=\"confirm_password\"\n                id=\"confirm_password\"\n                placeholder=\"Confirm Password\"\n                value={confirm_password}\n                valid={\n                  this.state.validate_confirmpassword.passwordConfirmState ===\n                  \"has-success\"\n                }\n                invalid={\n                  this.state.validate_confirmpassword.passwordConfirmState ===\n                  \"has-danger\"\n                }\n                onChange={e => {\n                  this.validateConfirmedPassword(e);\n                  this.handleInputChange(e);\n                }}\n              />{\" \"}\n              {/*name field used in JS*/}\n              <FormFeedback valid>Password looks good!</FormFeedback>\n              <FormFeedback invalid>\n                Make sure the password is the same that you entered above!\n              </FormFeedback>\n            </FormGroup>\n          </Col>\n          <Col>\n            <Button\n              disabled={!isEnabled}\n              tag={Link}\n              to=\"/main\"\n              id=\"signup\"\n              color=\"success\"\n              size=\"sm\"\n            >\n              Sign Up\n            </Button>\n          </Col>\n        </Form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}